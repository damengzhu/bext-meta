{"type":"javascript","name":"网页弹窗拦截","version":"1.0.0","tags":["工具脚本","其他脚本"],"synopsis":"弹窗次数过多时询问是否拦截某弹窗","source":" /*\n * @name: 网页弹窗拦截\n * @Author: undefined303（残月un）\n * @version: 1.2.1\n * @include: *\n */\nimport { runAt, runOnce, addElement, addStyle } from '@bext/util';\nimport config from '@bext/config';\nrunOnce(()=> {\n'use strict';\n\n/*当某弹窗弹出次数达到此值的倍数时，询问是否拦截*/\n/*当询问是否拦截次数达到该值的次数时，询问是否放行，填null则不会询问*/\n/*是否用toast显示被拦截的弹窗内容？true为是，false为否*/\n/*白名单网站：将网站完整地址或域名用\"\"包裹，并用英文逗号隔开\n示例：\n     单个网站\nconst IGNORED_SITE =[\"example.com\"]\n     多个网站\nconst IGNORED_SITE =[\"example1.com\",\"https://example2.com/example\"]\n*/\n\nconst { CONFIRM_COUNT = 5, ASK_IGNORE_COUNT = null, TOAST = true, IGNORED_SITE = [] } = config;\n/*****************以下勿改*****************/\n\nfunction encode(str,radix){\nstr=String(str)\nlet arr=[]\n  //返回的字符实体默认10进制，也可以选择16进制\n  radix=radix||0\n  for(let i=0;i<str.length;i++){                         arr.push((!radix?'&#'+str.codePointAt(i):'&#x'+str.codePointAt(i).toString(16)))\nif (str.codePointAt(i)>65535)\n {i++;}\n  }\n  let tmp=arr.join('')\n  return tmp\n}\n\nfunction toast(t, s = 3, c) {\nt=encode(t);\n  let isObj = (o) =>\n      typeof o == 'object' && !(o instanceof Array || o instanceof Function),\n    te = 0;\n  if (typeof t != 'string' || t == '') return 1;\n  if (typeof s != 'number') return 2;\n  if (c && (!isObj(c) || (!c.text && !c.color && !c.onclick && !c.onclose)))\n    return 3;\n  if (c) {\n    if (c.text && (typeof c.text != 'string' || c.text == '')) return 4;\n    if (c.color && (typeof c.color != 'string' || c.color == '')) return 5;\n    if (c.onclick && typeof c.onclick !== 'function') return 6;\n    if (c.onclose && typeof c.onclose !== 'function') return 7;\n  }\n\n  let ts = addStyle(`\n  #bextToast {\n    all: initial;\n    display: flex;\n    position: fixed;\n    left: 0;\n    right: 0;\n    bottom: 20vw;\n    width: max-content;\n    margin: 0 auto;\n    border-radius: 20px;\n    padding: .5rem 1rem;\n    font-size: 1rem;\n    background-color: rgba(0,0,0,0.5);\n    color: white;\n    z-index: 1000002;\n    opacity: 0%;\n    transition: opacity .2s;\n    max-width: 90vw ;\n    justify-content: space-between;\n    vertical-align: middle;\n  }\n    `),\n    td = addElement({\n      tag: 'div',\n      attrs: {\n        id: 'bextToast',\n        innerHTML: `<span>${t}</span>`,\n      },\n    }),\n    tt = function () {\n      te++;\n      if (te == 2) {\n        td.remove();\n        ts.remove();\n        if (c && c.onclose) c.onclose.call(this);\n      }\n    };\n  td.addEventListener('transitionend', tt);\n  if (c && c.text) {\n    let tc = addElement({\n      tag: 'span',\n      attrs: {\n        innerText: c.text,\n        onclick: c && c.onclick ? c.onclick : null,\n      },\n      to: td,\n    });\n    tc.style.color = c && c.color ? c.color : 'turquoise';\n    tc.style.paddingLeft=\"13px\";\n    tc.style.display=\"innerBlock\";\n    tc.style.verticalAlign=\"middle\"\n  }\n  setTimeout(function () {\n    td.style.opacity = 1;\n  }, 200);\n  setTimeout(function () {\n    td.style.opacity = 0;\n  }, (s+0.4)* 1000);\n}\nlet msgList=[];\nlet toast_var=TOAST\nif(toast_var){\nvar time=0\nvar msgListener=setInterval(()=>{\nif((Math.round(new Date())-time)>1100&&msgList.length>0){\nrunAt('document-end', ()=>{\ntoast(\n    (msgList.shift()), \n    0.7, \n    { \n      text: '本次不再显示', \n      color: 'turquoise', \n      onclick:()=>{\ntoast_var=false;\nclearInterval(msgListener);\nmsgList=[];\n},\n    },\n  );\ntime=Math.round(new Date());\n});\n}\n},1)\n}\nIGNORED_SITE.forEach((item,index) =>{\ntry{\nIGNORED_SITE[index]=new URL(item).href\n}catch(e){/*ignore error*/}\n});\nif(!(IGNORED_SITE.indexOf(document.domain)!=-1||IGNORED_SITE.indexOf(location.href)!=-1)){\nconsole.log(\"启用网页弹窗拦截\")\nconst originalConfirm =window.confirm;\n[\"alert\", \"confirm\", \"prompt\"].forEach((method) => {\nlet count = 0;\nlet count_time = 1;\nlet ignore = false;\nlet ask=true;\nconst fn = window[method] ;\nwindow[method]=function(){\nif(ignore) {\nmsgList.push(`拦截${method}: ${(arguments.length==0)?\"\":String(arguments[0])}`)\nreturn undefined;\n}\nconst result = fn((arguments.length==0)?\"\":String(arguments[0]));\ncount++;\nif (count == CONFIRM_COUNT*count_time) {\nif(ask){\nignore = originalConfirm(\n`当前网页已弹出${method}弹窗${count}次，是否忽略后续该弹窗？`);\n}\nif(ASK_IGNORE_COUNT!=null&&!ignore){\nif(count_time==ASK_IGNORE_COUNT&&originalConfirm(`是否本次放行本网站的${method}弹窗？\\n如需永久放行，请将该网站域名或完整链接添加至白名单。`)){\nask=false;\n}\n}\ncount_time++;\n}\nreturn result;\n};\n});\n}\n})","detail":"<p>网页弹窗有三种：alert，confirm，prompt，分别为：警告框，确认框和输入框，有的网站会滥用这三种弹窗，给用户造成极大的干扰。</p><p>脚本预设参数<strong>CONFIRM_COUNT=5</strong></p><p>（可修改），当某类弹窗弹出次数达该参数的倍数时，询问是否拦截该类弹窗，拦截刷新解除。</p>","extra":{"xMetaComment":"// @run-at document-start"},"configSchema":{"type":"object","properties":{"CONFIRM_COUNT":{"type":"number","description":"当某弹窗弹出次数达到此值的倍数时，询问是否拦截","minimum":1},"ASK_IGNORE_COUNT":{"type":"number","description":"当询问是否拦截次数达到该值的次数时，询问是否放行，不填则不会询问","minimum":1},"TOAST":{"type":"boolean","title":"用toast显示被拦截的弹窗内容"},"IGNORED_SITE":{"type":"array","items":{"type":"string"},"description":"例如 example.com 或者 https://example.com，点击加号添加多个","title":"白名单网站"}},"required":["CONFIRM_COUNT","TOAST"]},"defaultConfig":{"CONFIRM_COUNT":5,"ASK_IGNORE_COUNT":3,"TOAST":true,"IGNORED_SITE":[]}}